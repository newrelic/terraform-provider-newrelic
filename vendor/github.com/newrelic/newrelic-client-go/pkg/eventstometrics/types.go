// Code generated by typegen; DO NOT EDIT.

package eventstometrics

/* DateTime - The `DateTime` scalar represents a date and time. The `DateTime` appears as an ISO8601 formatted string. */
type DateTime string

/* EventsToMetricsAccountStitchedFields - Account stitched fields to enable autostitching in NerdGraph */
type EventsToMetricsAccountStitchedFields struct {
	/* AllRules - List all rules for your account. */
	AllRules EventsToMetricsListRuleResult `json:"allRules"`
	/* RulesById - List rules for your account by id. */
	RulesById EventsToMetricsListRuleResult `json:"rulesById"`
}

/* EventsToMetricsCreateRuleFailure - Error details about the events to metrics rule that failed to be created and why. */
type EventsToMetricsCreateRuleFailure struct {
	/* Errors - Information about why the create failed. */
	Errors []EventsToMetricsError `json:"errors"`
	/* Submitted - Input information about a submitted rule that was unable to be created. */
	Submitted EventsToMetricsCreateRuleSubmission `json:"submitted"`
}

/* EventsToMetricsCreateRuleInput - Details needed to create an events to metrics conversion rule. */
type EventsToMetricsCreateRuleInput struct {
	/* AccountID - The account where the events exist and the metrics will be put. */
	AccountID int `json:"accountId"`
	/* Description - Provides additional information about the rule. */
	Description string `json:"description"`
	/* Name - The name of the rule. This must be unique within a given account. */
	Name string `json:"name"`
	/* Nrql - Explains how to create one or more metrics from events. */
	Nrql string `json:"nrql"`
}

/* EventsToMetricsCreateRuleResult - The result of which submitted events to metrics rules were successfully and unsuccessfully created */
type EventsToMetricsCreateRuleResult struct {
	/* Failures - Rules that were not created and why. */
	Failures []EventsToMetricsCreateRuleFailure `json:"failures"`
	/* Successes - Rules that were successfully created. */
	Successes []EventsToMetricsRule `json:"successes"`
}

/* EventsToMetricsCreateRuleSubmission - The details that were submitted when creating an events to metrics conversion rule. */
type EventsToMetricsCreateRuleSubmission struct {
	/* AccountID - The account where the events exist and the metrics will be put. */
	AccountID int `json:"accountId"`
	/* Description - Provides additional information about the rule. */
	Description string `json:"description"`
	/* Name - The name of the rule. This must be unique within a given account. */
	Name string `json:"name"`
	/* Nrql - Explains how to create one or more metrics from events. */
	Nrql string `json:"nrql"`
}

/* EventsToMetricsDeleteRuleFailure - Error details about the events to metrics rule that failed to be deleted and why. */
type EventsToMetricsDeleteRuleFailure struct {
	/* Errors - Information about why the delete failed. */
	Errors []EventsToMetricsError `json:"errors"`
	/* Submitted - Input information about a submitted rule that was unable to be deleted. */
	Submitted EventsToMetricsDeleteRuleSubmission `json:"submitted"`
}

/* EventsToMetricsDeleteRuleInput - Identifying information about the events to metrics rule you want to delete. */
type EventsToMetricsDeleteRuleInput struct {
	/* AccountID - A submitted account id. */
	AccountID int `json:"accountId"`
	/* RuleId - A submitted rule id. */
	RuleId string `json:"ruleId"`
}

/* EventsToMetricsDeleteRuleResult - The result of which submitted events to metrics rules were successfully and unsuccessfully deleted. */
type EventsToMetricsDeleteRuleResult struct {
	/* Failures - Information about the rules that could not be deleted. */
	Failures []EventsToMetricsDeleteRuleFailure `json:"failures"`
	/* Successes - Rules that were successfully deleted. */
	Successes []EventsToMetricsRule `json:"successes"`
}

/* EventsToMetricsDeleteRuleSubmission - The details that were submitted when deleteing an events to metrics conversion rule. */
type EventsToMetricsDeleteRuleSubmission struct {
	/* AccountID - A submitted account id. */
	AccountID int `json:"accountId"`
	/* RuleId - A submitted rule id. */
	RuleId string `json:"ruleId"`
}

/* EventsToMetricsError - Error details when processing events to metrics rule requests. */
type EventsToMetricsError struct {
	/* Description - A detailed error message. */
	Description string `json:"description"`
	/* Reason - The category of error that occurred. */
	Reason EventsToMetricsErrorReason `json:"reason"`
}

/* EventsToMetricsErrorReason - General error categories. */
type EventsToMetricsErrorReason string

var EventsToMetricsErrorReasonTypes = struct {
	/* GENERAL - Other errors. */
	GENERAL EventsToMetricsErrorReason
	/* INVALID_INPUT - Indicates some part of your submission was invalid. */
	INVALID_INPUT EventsToMetricsErrorReason
	/* USER_NOT_AUTHORIZED - The user attempting to submit this rule is not authorized to do so. */
	USER_NOT_AUTHORIZED EventsToMetricsErrorReason
}{
	GENERAL:             "GENERAL",
	INVALID_INPUT:       "INVALID_INPUT",
	USER_NOT_AUTHORIZED: "USER_NOT_AUTHORIZED",
}

/* EventsToMetricsListRuleResult - A list of rule details to be returned. */
type EventsToMetricsListRuleResult struct {
	/* Rules - Event-to-metric rules to be returned. */
	Rules []EventsToMetricsRule `json:"rules"`
}

/* EventsToMetricsRule - Information about an event-to-metric rule which creates metrics from events. */
type EventsToMetricsRule struct {
	/* AccountID - Account with the event and where the metrics will be placed. */
	AccountID int `json:"accountId"`
	/* CreatedAt - The time at which the rule was created */
	CreatedAt DateTime `json:"createdAt"`
	/* Description - Additional information about the rule. */
	Description string `json:"description"`
	/* Enabled - True means this rule is enabled. False means the rule is currently not creating metrics. */
	Enabled bool `json:"enabled"`
	/* ID - The id, uniquely identifying the rule. */
	ID string `json:"id"`
	/* Name - The name of the rule. This must be unique within an account. */
	Name string `json:"name"`
	/* Nrql - Explains how to create metrics from events. */
	Nrql string `json:"nrql"`
	/* UpdatedAt - The time at which the rule was updated */
	UpdatedAt DateTime `json:"updatedAt"`
}

/* EventsToMetricsUpdateRuleFailure - Error details about the events to metrics rule that failed to be updated and why. */
type EventsToMetricsUpdateRuleFailure struct {
	/* Errors - Information about why the update failed. */
	Errors []EventsToMetricsError `json:"errors"`
	/* Submitted - Input information about a failed update. */
	Submitted EventsToMetricsUpdateRuleSubmission `json:"submitted"`
}

/* EventsToMetricsUpdateRuleInput - Identifying information about the events to metrics rule you want to update. */
type EventsToMetricsUpdateRuleInput struct {
	/* AccountID - A submitted account id. */
	AccountID int `json:"accountId"`
	/* Enabled - Changes the state of the rule as being enabled or disabled. */
	Enabled bool `json:"enabled"`
	/* RuleId - A submitted rule id. */
	RuleId string `json:"ruleId"`
}

/* EventsToMetricsUpdateRuleResult - The result of which submitted events to metrics rules were successfully and unsuccessfully update. */
type EventsToMetricsUpdateRuleResult struct {
	/* Failures - Rules that failed to get updated. */
	Failures []EventsToMetricsUpdateRuleFailure `json:"failures"`
	/* Successes - Rules that were successfully enabled or disabled. */
	Successes []EventsToMetricsRule `json:"successes"`
}

/* EventsToMetricsUpdateRuleSubmission - The details that were submitted when updating an events to metrics conversion rule. */
type EventsToMetricsUpdateRuleSubmission struct {
	/* AccountID - A submitted account id. */
	AccountID int `json:"accountId"`
	/* Enabled - Changes the state of the rule as being enabled or disabled. */
	Enabled bool `json:"enabled"`
	/* RuleId - A submitted rule id. */
	RuleId string `json:"ruleId"`
}
